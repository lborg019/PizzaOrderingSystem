/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package pizzaorderingsystem;

import java.util.ArrayList;

/**
 *
 * @author KCISCisco
 */
public class PizzaOrdering extends javax.swing.JFrame {

    /**
     * Creates new form PizzaOrdering
     */
    String _size;
    ArrayList<String> toppingsArray = new ArrayList();
    String _name;
    String _instructions;
    String _option;
    String _price;
    
    double _smallPrice = 10.00;
    double _mediumPrice = 12.00;
    double _largePrice = 15.00;
    double _extraLargePrice = 17.00;
    double _toppingPrice = 3.00;
    double _sizePrice;
    double _totalToppings;
    
    ArrayList<PizzaOrderingSystem> pizzaOrder = new ArrayList();
    
    private void addOnions()
    {
        String onions = "Onions";
        if(jCheckBoxOnions.isSelected() == true)
        {
            toppingsArray.add(onions);
            _sizePrice += _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
            _price = String.valueOf(_sizePrice);
        }
        else
        if(jCheckBoxOnions.isSelected() == false)
        {
            toppingsArray.remove(onions);
            _sizePrice -= _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
            _price = String.valueOf(_sizePrice);
        }
    }
    
    private void addOlives()
    {  
        String olives = "Olives";
        if(jCheckBoxBlackOlives.isSelected() == true)
        {
            toppingsArray.add(olives);
            _sizePrice += _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
            _price = String.valueOf(_sizePrice);
        }
        else
        if(jCheckBoxBlackOlives.isSelected() == false)
        {
            toppingsArray.remove(olives);
            _sizePrice -= _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
            _price = String.valueOf(_sizePrice);
        }
       
    }
    
    private void addRoasted()
    {
        String roasted = "Roasted Red Peppers";
        if(jCheckBoxRoastedRedPeppers.isSelected() == true)
        {
            toppingsArray.add(roasted);
            _sizePrice += _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
            _price = String.valueOf(_sizePrice);
        }
        else
        if(jCheckBoxRoastedRedPeppers.isSelected() == false)
        {
            toppingsArray.remove(roasted);
            _sizePrice -= _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));   
            _price = String.valueOf(_sizePrice);
        }
    }
        
    private void pricing()//removing this
    {
        toppingsArray.size();
        if(jRadioButtonSmall.isSelected())
        {
            _sizePrice = _smallPrice + toppingsArray.size() * _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
        }
        else
        if(jRadioButtonMedium.isSelected())
        {
            _sizePrice = _mediumPrice + toppingsArray.size() * _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
        }
        else
        if(jRadioButtonLarge.isSelected())
        {
            _sizePrice = _largePrice + toppingsArray.size() * _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
        }
        else
        if(jRadioButtonExtraLarge.isSelected())
        {
            _sizePrice = _extraLargePrice + toppingsArray.size() * _toppingPrice;
            jLabelPrice.setText(String.valueOf(_sizePrice));
        }
    }
    
//    private double totalToppings()
//    {
//        double _totalToppings;
//    }

            
    public PizzaOrdering() {
        initComponents();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupSize = new javax.swing.ButtonGroup();
        jRadioButtonSmall = new javax.swing.JRadioButton();
        jRadioButtonMedium = new javax.swing.JRadioButton();
        jRadioButtonLarge = new javax.swing.JRadioButton();
        jRadioButtonExtraLarge = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCheckBoxBlackOlives = new javax.swing.JCheckBox();
        jCheckBoxOnions = new javax.swing.JCheckBox();
        jCheckBoxRoastedRedPeppers = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxOption = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabelPrice = new javax.swing.JLabel();
        jButtonOrderButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDisplay = new javax.swing.JTextArea();
        Pic = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextFieldInstructions = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroupSize.add(jRadioButtonSmall);
        jRadioButtonSmall.setText("Small");
        jRadioButtonSmall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonSmallActionPerformed(evt);
            }
        });

        buttonGroupSize.add(jRadioButtonMedium);
        jRadioButtonMedium.setText("Medium");
        jRadioButtonMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMediumActionPerformed(evt);
            }
        });

        buttonGroupSize.add(jRadioButtonLarge);
        jRadioButtonLarge.setText("Large");
        jRadioButtonLarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonLargeActionPerformed(evt);
            }
        });

        buttonGroupSize.add(jRadioButtonExtraLarge);
        jRadioButtonExtraLarge.setText("Extra Large");
        jRadioButtonExtraLarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonExtraLargeActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel1.setText("Size:");

        jLabel2.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel2.setText("Toppings:");

        jCheckBoxBlackOlives.setText("Black Olives");
        jCheckBoxBlackOlives.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxBlackOlivesActionPerformed(evt);
            }
        });

        jCheckBoxOnions.setText("Onions");
        jCheckBoxOnions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOnionsActionPerformed(evt);
            }
        });

        jCheckBoxRoastedRedPeppers.setText("Roasted Red Peppers");
        jCheckBoxRoastedRedPeppers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRoastedRedPeppersActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Orator Std", 0, 24)); // NOI18N
        jLabel3.setText("Info:");

        jLabel4.setText("First & Last Name:");

        jLabel5.setText("Special Instructions:");

        jComboBoxOption.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Delivery", "Carryout" }));
        jComboBoxOption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOptionActionPerformed(evt);
            }
        });

        jLabel6.setText("Price: $");

        jLabelPrice.setText("0.0");

        jButtonOrderButton.setText("Order!");
        jButtonOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrderButtonActionPerformed(evt);
            }
        });

        jTextAreaDisplay.setColumns(20);
        jTextAreaDisplay.setRows(5);
        jScrollPane1.setViewportView(jTextAreaDisplay);

        jTextFieldInstructions.setColumns(20);
        jTextFieldInstructions.setRows(5);
        jScrollPane2.setViewportView(jTextFieldInstructions);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pizzaorderingsystem/pizza4.png"))); // NOI18N
        jLabel7.setText("jLabel7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBoxRoastedRedPeppers)
                                    .addComponent(jCheckBoxOnions)
                                    .addComponent(jCheckBoxBlackOlives)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jRadioButtonSmall)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonMedium)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonLarge)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButtonExtraLarge)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Pic)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButtonSmall)
                    .addComponent(jRadioButtonMedium)
                    .addComponent(jRadioButtonLarge)
                    .addComponent(jRadioButtonExtraLarge))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxBlackOlives, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxOnions)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxRoastedRedPeppers)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5))
                    .addComponent(Pic, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jComboBoxOption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonOrderButton))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxOnionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOnionsActionPerformed
        addOnions();
    }//GEN-LAST:event_jCheckBoxOnionsActionPerformed

    private void jCheckBoxBlackOlivesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxBlackOlivesActionPerformed
        addOlives();
    }//GEN-LAST:event_jCheckBoxBlackOlivesActionPerformed
 
    private void jButtonOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrderButtonActionPerformed
        //Client Name:
        _name = jTextFieldName.getText();
        
        //Pizza Instructions:
        _instructions = jTextFieldInstructions.getText();
        
        //Option (Delivery or Carryout):
        _option = jComboBoxOption.getSelectedItem().toString();
        
        //Pizza Toppings:
        if(jCheckBoxBlackOlives.isSelected())
        {
            String olives = jCheckBoxBlackOlives.getText();
        }
        if(jCheckBoxOnions.isSelected())
        {
            String onions = jCheckBoxOnions.getText();
        }
        if(jCheckBoxRoastedRedPeppers.isSelected())
        {
            String roastedredpeppers = jCheckBoxRoastedRedPeppers.getText();
        }
        
        
        //Pizza Size String:
        if(jRadioButtonSmall.isSelected())
        {
            _size = jRadioButtonSmall.getText();
        }
        else
        if(jRadioButtonMedium.isSelected())
        {
            _size = jRadioButtonMedium.getText();
        }
        else
        if(jRadioButtonLarge.isSelected())
        {
            _size = jRadioButtonLarge.getText();
        }
        else
        if(jRadioButtonExtraLarge.isSelected())
        {
            _size = jRadioButtonExtraLarge.getText();
        }
        
        
        //Adds pizza object to array:
        pizzaOrder.add(new PizzaOrderingSystem(_size, toppingsArray, _name, _instructions, _option, _price));
        for (PizzaOrderingSystem pizzaOrderingSystem : pizzaOrder)
        {
            jTextAreaDisplay.append(pizzaOrder.toString());//Display
        }
    }//GEN-LAST:event_jButtonOrderButtonActionPerformed

    private void jRadioButtonSmallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonSmallActionPerformed
        pricing();
    }//GEN-LAST:event_jRadioButtonSmallActionPerformed

    private void jRadioButtonMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMediumActionPerformed
        pricing();
    }//GEN-LAST:event_jRadioButtonMediumActionPerformed

    private void jCheckBoxRoastedRedPeppersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRoastedRedPeppersActionPerformed
        addRoasted();
    }//GEN-LAST:event_jCheckBoxRoastedRedPeppersActionPerformed

    private void jRadioButtonLargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonLargeActionPerformed
        pricing();
    }//GEN-LAST:event_jRadioButtonLargeActionPerformed

    private void jRadioButtonExtraLargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonExtraLargeActionPerformed
        pricing();
    }//GEN-LAST:event_jRadioButtonExtraLargeActionPerformed

    private void jComboBoxOptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOptionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxOptionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PizzaOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PizzaOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PizzaOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PizzaOrdering.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PizzaOrdering().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Pic;
    private javax.swing.ButtonGroup buttonGroupSize;
    private javax.swing.JButton jButtonOrderButton;
    private javax.swing.JCheckBox jCheckBoxBlackOlives;
    private javax.swing.JCheckBox jCheckBoxOnions;
    private javax.swing.JCheckBox jCheckBoxRoastedRedPeppers;
    private javax.swing.JComboBox jComboBoxOption;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JRadioButton jRadioButtonExtraLarge;
    private javax.swing.JRadioButton jRadioButtonLarge;
    private javax.swing.JRadioButton jRadioButtonMedium;
    private javax.swing.JRadioButton jRadioButtonSmall;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaDisplay;
    private javax.swing.JTextArea jTextFieldInstructions;
    private javax.swing.JFormattedTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
}
